// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/moisesPompilio/projeto_x/src/adapters/htpp/handles/UserHandles (interfaces: IUserHandles)

// Package mocks is a generated GoMock package.
package mocks

import (
	http "net/http"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIUserHandles is a mock of IUserHandles interface.
type MockIUserHandles struct {
	ctrl     *gomock.Controller
	recorder *MockIUserHandlesMockRecorder
}

// MockIUserHandlesMockRecorder is the mock recorder for MockIUserHandles.
type MockIUserHandlesMockRecorder struct {
	mock *MockIUserHandles
}

// NewMockIUserHandles creates a new mock instance.
func NewMockIUserHandles(ctrl *gomock.Controller) *MockIUserHandles {
	mock := &MockIUserHandles{ctrl: ctrl}
	mock.recorder = &MockIUserHandlesMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIUserHandles) EXPECT() *MockIUserHandlesMockRecorder {
	return m.recorder
}

// CreateUserHandle mocks base method.
func (m *MockIUserHandles) CreateUserHandle(arg0 http.ResponseWriter, arg1 *http.Request) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "CreateUserHandle", arg0, arg1)
}

// CreateUserHandle indicates an expected call of CreateUserHandle.
func (mr *MockIUserHandlesMockRecorder) CreateUserHandle(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateUserHandle", reflect.TypeOf((*MockIUserHandles)(nil).CreateUserHandle), arg0, arg1)
}

// DeleteUserHandles mocks base method.
func (m *MockIUserHandles) DeleteUserHandles(arg0 http.ResponseWriter, arg1 *http.Request) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "DeleteUserHandles", arg0, arg1)
}

// DeleteUserHandles indicates an expected call of DeleteUserHandles.
func (mr *MockIUserHandlesMockRecorder) DeleteUserHandles(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteUserHandles", reflect.TypeOf((*MockIUserHandles)(nil).DeleteUserHandles), arg0, arg1)
}

// LoginHandle mocks base method.
func (m *MockIUserHandles) LoginHandle(arg0 http.ResponseWriter, arg1 *http.Request) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "LoginHandle", arg0, arg1)
}

// LoginHandle indicates an expected call of LoginHandle.
func (mr *MockIUserHandlesMockRecorder) LoginHandle(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LoginHandle", reflect.TypeOf((*MockIUserHandles)(nil).LoginHandle), arg0, arg1)
}
